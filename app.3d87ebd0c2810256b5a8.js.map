{"version":3,"sources":["webpack:///./app/components/Grid/style.css?2444","webpack:///./app/actions/filter.ts","webpack:///./app/components/AddItemPanel/style.css?609d","webpack:///./app/components/SelectField/style.css?d21a","webpack:///./app/components/ItemTable/style.css?7682","webpack:///./app/index.tsx","webpack:///./app/containers/App/style.css","webpack:///./app/components/InputField/style.css?f82f","webpack:///./app/components/Title/style.css?3946","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/Grid/index.tsx","webpack:///./app/components/Grid/Column.tsx","webpack:///./app/components/InputField/index.tsx","webpack:///./app/components/AddItemPanel/index.tsx","webpack:///./app/components/SelectField/index.tsx","webpack:///./app/components/ItemTable/index.tsx","webpack:///./app/components/Title/index.tsx","webpack:///./app/containers/App/index.tsx","webpack:///./app/reducers/items.ts","webpack:///./app/reducers/newItem.ts","webpack:///./app/reducers/filter.ts","webpack:///./app/reducers/index.ts","webpack:///./app/middleware/logger.ts","webpack:///./app/store/index.ts","webpack:///./main.tsx","webpack:///./app/actions/items.ts"],"names":["module","exports","FilterActions","Type","setFilter","SET_FILTER","useFilterActions","dispatch","actions","App","path","component","Header","style","marginBottom","Grid","Column","size","margin","children","className","row","column","InputField","placeholder","icon","value","onChange","width","position","type","input","e","target","right","top","color","AddItemPanel","itemActions","filterActions","newItem","filter","handleAddItem","useCallback","item","text","column_id","alert","addItem","clearNewItem","handleTextChange","editItemText","handleColumnChange","editItemColmun","handleSearchChange","addItemPanel","SelectField","addItemButton","onClick","label","option","ItemTable","title","items","handleDelete","i","deleteItem","itemTable","map","id","length","Title","filterItems","columndId","toLowerCase","includes","history","location","column1Items","useMemo","column2Items","normal","backgroundColor","padding","itemsReducer","handleActions","ADD_ITEM","state","action","payload","reduce","max","Math","DELETE_ITEM","newItemReducer","EDIT_ITEM_COLUMN","parseInt","EDIT_ITEM_TEXT","CLEAR_NEW_ITEM","filterReducer","rootReducer","logger","store","next","persistConfig","key","storage","initialState","middleware","persistedReducer","persistor","render","loading","document","getElementById","ItemActions","useItemActions"],"mappings":"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","file":"app.3d87ebd0c2810256b5a8.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"_3Atnx\",\"column\":\"_3vfDc\",\"col-1\":\"_26Yld\",\"col-2\":\"_2ZLkK\",\"col-3\":\"_2I3Nr\",\"col-4\":\"_2nLfr\",\"col-5\":\"_25ABw\",\"col-6\":\"i8AtJ\",\"col-7\":\"_1rrmN\",\"col-8\":\"Et3TV\",\"col-9\":\"r8IIK\",\"col-10\":\"nkEcP\",\"col-11\":\"_26TQq\",\"col-12\":\"_1TGrN\",\"container\":\"_3dggJ\"};","import { useMemo } from 'react';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { createAction } from 'redux-actions';\r\n\r\nexport namespace FilterActions {\r\n  export enum Type {\r\n    SET_FILTER = 'SET_FILTER',\r\n  }\r\n\r\n  export const setFilter = createAction<string>(Type.SET_FILTER);\r\n}\r\n\r\nexport type FilterActions = Omit<typeof FilterActions, 'Type'>;\r\n\r\nexport const useFilterActions = (dispatch: Dispatch) => {\r\n  const { Type, ...actions } = FilterActions;\r\n  return useMemo(() => bindActionCreators(actions as any, dispatch), [dispatch]) as FilterActions;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addItemButton\":\"_7Zhko\",\"label\":\"_1l119\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"_1mCnu\",\"option\":\"_3tA9D\",\"middle\":\"_3JfNp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemTable\":\"_3fTIQ\",\"icon\":\"_2MHXq\"};","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { App as ItemApp } from 'app/containers/App';\r\nimport { hot } from 'react-hot-loader';\r\n\r\nexport const App = hot(module)(() => (\r\n  <Switch>\r\n    <Route path=\"/\" component={ItemApp} />\r\n  </Switch>\r\n));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_1XP1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"hW4-a\",\"middle\":\"_1dlbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"_1bKy8\"};","import React from 'react';\r\nimport {  Grid } from 'app/components';\r\n\r\nexport namespace Header {\r\n  export interface Props {\r\n  }\r\n}\r\n\r\nexport const Header = ({ }: Header.Props): JSX.Element => {\r\n  return (\r\n    <header style={{marginBottom: 50}}>\r\n      <h1>Marvelous!</h1>\r\n      <Grid>\r\n        <Grid.Column size='col-7'>\r\n          <p style={{margin: 0}}>\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since.\r\n          </p>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Column } from './Column';\r\nimport styleSheet from './style.css';\r\n\r\nexport namespace Grid {\r\n  export interface Props {\r\n    children: React.ReactNode,\r\n    style?: any,\r\n  }\r\n}\r\n\r\nexport const Grid = ({ children, style }: Grid.Props): JSX.Element => {\r\n  return (\r\n    <div className={styleSheet.row} style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nGrid.Column = Column;","import React from 'react';\r\nimport style from './style.css';\r\n\r\nexport namespace Column {\r\n  export interface Props {\r\n    children: React.ReactNode,\r\n    size: string,\r\n  }\r\n}\r\n\r\nexport const Column = ({ size=\"\", children}: Column.Props): JSX.Element => {\r\n  return (\r\n    <div className={`${style.column} ${style[size]}`} > \r\n        {children}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport style from './style.css';\r\n\r\nexport namespace InputField {\r\n  export interface Props {\r\n    placeholder: string,\r\n    icon?: string,\r\n    value: string,\r\n    onChange: any,\r\n  }\r\n}\r\n\r\nexport const InputField = ({ placeholder='', icon, value, onChange }: InputField.Props): JSX.Element => {\r\n\r\n  const handleOnChange = (e:any) => {\r\n    onChange(e.target.value)\r\n  };\r\n\r\n  return (\r\n    <div style={{width: \"100%\", position: 'relative'}}>\r\n      <input \r\n        type='text'\r\n        className={style.input}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={handleOnChange}\r\n      />\r\n      {icon && \r\n        <i \r\n          className={icon}\r\n          style={{\r\n            position: 'absolute',\r\n            right: 15,\r\n            top: 12,\r\n            color: 'white'\r\n          }}\r\n        />\r\n      }\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { InputField, SelectField } from 'app/components';\r\nimport style from \"./style.css\";\r\nimport {ItemActions, useItemActions, useFilterActions, FilterActions } from 'app/actions'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from 'app/reducers';\r\n\r\nexport namespace AddItemPanel {\r\n  export interface Props {\r\n  }\r\n}\r\n\r\nexport const AddItemPanel = ({  }: AddItemPanel.Props): JSX.Element => {\r\n\r\n  const dispatch = useDispatch();\r\n  const itemActions = useItemActions(dispatch);\r\n  const filterActions = useFilterActions(dispatch);\r\n\r\n  const {newItem, filter} = useSelector((state: RootState) => {\r\n    return {\r\n      newItem: state.newItem,\r\n      filter: state.filter,\r\n    };\r\n  });\r\n\r\n  const handleAddItem = React.useCallback((item): void => {\r\n    if (!item.text) {\r\n      alert(\"Please enter item text.\");\r\n    }\r\n    else if (item.column_id == 0) {\r\n      alert(\"Please select a column.\");\r\n    }\r\n    else {\r\n      itemActions.addItem(item); \r\n      itemActions.clearNewItem(); \r\n    }\r\n  }, [ItemActions]);\r\n\r\n  const handleTextChange = React.useCallback((value): void => {\r\n    itemActions.editItemText(value); \r\n  }, [ItemActions]);\r\n\r\n  const handleColumnChange = React.useCallback((value): void => {\r\n    itemActions.editItemColmun(value); \r\n  }, [ItemActions]);\r\n\r\n  const handleSearchChange = React.useCallback((value): void => {\r\n    filterActions.setFilter(value); \r\n  }, [FilterActions]);\r\n\r\n  return (\r\n    <div className={style.addItemPanel}>\r\n      <InputField \r\n        placeholder='ENTER ITEM'\r\n        value={newItem.text}\r\n        onChange={handleTextChange}\r\n      />\r\n      <SelectField \r\n        placeholder='CHOOSE COLUMN'\r\n        value={newItem.column_id}\r\n        onChange={handleColumnChange}\r\n      />\r\n      <button \r\n        className={style.addItemButton}\r\n        style={{margin: \"100px 0 15px 0\"}}\r\n        onClick={()=>handleAddItem(newItem)}\r\n      >\r\n        ADD ITEM\r\n      </button>\r\n      <label \r\n        className={style.label}\r\n      >\r\n        SEARCH AN ITEM\r\n      </label>\r\n      <InputField \r\n        placeholder='SEARCH'\r\n        icon=\"fa fa-search\"\r\n        onChange={handleSearchChange}\r\n        value={filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport style from './style.css';\r\n\r\nexport namespace SelectField {\r\n  export interface Props {\r\n    placeholder: string,\r\n    value: number,\r\n    onChange: any,\r\n  }\r\n}\r\n\r\nexport const SelectField = ({ placeholder='', value, onChange}: SelectField.Props): JSX.Element => {\r\n\r\n  const handleOnChange = (e:any) => {\r\n    onChange( e.target.value)\r\n  };\r\n\r\n  return (\r\n    <select\r\n      className={style.input}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={handleOnChange}\r\n      style={{color: value> 0? \"white\" : \"#c3c7cd\"}}\r\n    >\r\n      <option value={0} style={{color: '#c3c7cd'}}>{placeholder}</option>\r\n      <option value={1} className={style.option}>COLUMN 1</option>\r\n      <option value={2} className={style.option}>COLUMN 2</option>\r\n    </select>\r\n  );\r\n};\r\n","import React from 'react';\r\n// import { InputField, SelectField } from 'app/components';\r\nimport style from \"./style.css\"\r\nimport {ItemModel} from \"app/models\";\r\nimport {ItemActions, useItemActions } from 'app/actions'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport namespace ItemTable {\r\n    export interface Props {\r\n        title: string,\r\n        items: ItemModel[],\r\n    }\r\n}\r\n\r\nexport const ItemTable = ({ title, items }: ItemTable.Props): JSX.Element => {\r\n    const dispatch = useDispatch();\r\n    const itemActions = useItemActions(dispatch);\r\n\r\n    const handleDelete = React.useCallback((i): void => {\r\n        itemActions.deleteItem(i); \r\n    }, [ItemActions]);\r\n\r\n    return (\r\n        <table className={style.itemTable}>\r\n            <thead>\r\n                <tr>\r\n                    <th>{title}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map( item => {\r\n                    return (\r\n                        <tr>\r\n                            <td>\r\n                                {item.text}\r\n                                <i \r\n                                    className={'fa fa-window-close-o ' + style.icon}\r\n                                    onClick={() => handleDelete(item.id)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                {items.length === 0 && (\r\n                    <tr>\r\n                        <td>No items to display.</td>\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport style from './style.css';\r\n\r\nexport namespace Title {\r\n  export interface Props {\r\n  }\r\n}\r\n\r\nexport const Title = ({ }: Title.Props): JSX.Element => {\r\n  return (\r\n    <div className={style.title}>\r\n      <h4>ADD AN ITEM</h4>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport style from './style.css';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'app/reducers';\r\nimport { Header, Grid, AddItemPanel, ItemTable, Title } from 'app/components';\r\nimport {ItemModel} from \"app/models\"\r\n\r\n\r\nexport namespace App {\r\n  export interface Props extends RouteComponentProps<void> {}\r\n}\r\n\r\nfunction filterItems (items:ItemModel[], filter=\"\", columndId=1) {\r\n  return items.filter( (i:ItemModel) => {\r\n    if (filter) {\r\n      return ( (i.text || \"\").toLowerCase() ).includes(filter.toLowerCase()) && i.column_id === columndId;\r\n    }\r\n    return i.column_id === columndId\r\n  })\r\n}\r\n\r\nexport const App = ({ history, location }: App.Props) => {\r\n  // const dispatch = useDispatch();\r\n\r\n  const { items, filter} = useSelector((state: RootState) => {\r\n    return {\r\n      items: state.items,\r\n      filter: state.filter,\r\n    };\r\n  });\r\n\r\n  const column1Items = React.useMemo(() => filterItems(items, filter, 1), [items, filter] );\r\n  const column2Items = React.useMemo(() => filterItems(items, filter, 2), [items, filter] );\r\n\r\n  return (\r\n    <div className={style.normal}>\r\n      <Header />\r\n      <Title />\r\n      <Grid>\r\n        <Grid.Column size='col-3'>\r\n          <AddItemPanel /> \r\n        </Grid.Column>\r\n        <Grid.Column size='col-9'>\r\n          <Grid \r\n            style={{\r\n              backgroundColor: 'white',\r\n              padding: 5,\r\n            }}\r\n          >\r\n            <Grid.Column size='col-6'>\r\n              <ItemTable \r\n                title='COLUMN 1'\r\n                items={column1Items}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column size='col-6'>\r\n              <ItemTable \r\n                title='COLUMN 2'\r\n                items={column2Items}\r\n              />\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import { handleActions } from 'redux-actions';\r\nimport { RootState } from './state';\r\nimport { ItemActions } from 'app/actions/items';\r\nimport { ItemModel } from 'app/models';\r\n\r\nconst initialState: RootState.ItemState = [\r\n  {\r\n    id: 1,\r\n    text: 'Item #1',\r\n    column_id: 1\r\n  },\r\n  {\r\n    id: 2,\r\n    text: 'Item #2',\r\n    column_id: 1\r\n  },\r\n  {\r\n    id: 3,\r\n    text: 'Item #3',\r\n    column_id: 1\r\n  },\r\n  {\r\n    id: 4,\r\n    text: 'Item #4',\r\n    column_id: 1\r\n  },\r\n  {\r\n    id: 5,\r\n    text: 'Item #5',\r\n    column_id: 1\r\n  },\r\n  {\r\n    id: 6,\r\n    text: 'Item #6',\r\n    column_id: 1\r\n  },\r\n  {\r\n    id: 7,\r\n    text: 'Item #7',\r\n    column_id: 1\r\n  },\r\n  {\r\n    id: 8,\r\n    text: 'Item #8',\r\n    column_id: 2\r\n  },\r\n  {\r\n    id: 9,\r\n    text: 'Item #9',\r\n    column_id: 2\r\n  },\r\n  {\r\n    id: 10,\r\n    text: 'Item #10',\r\n    column_id: 2\r\n  },\r\n  {\r\n    id: 11,\r\n    text: 'Item #1',\r\n    column_id: 2\r\n  },\r\n  {\r\n    id: 12,\r\n    text: 'Item #12',\r\n    column_id: 2\r\n  },\r\n];\r\n\r\nexport const itemsReducer = handleActions<RootState.ItemState, ItemModel>(\r\n  {\r\n    [ItemActions.Type.ADD_ITEM]: (state, action) => {\r\n      if (action.payload) {\r\n        return [\r\n          ...state,\r\n          {\r\n            id: state.reduce((max, item) => Math.max(item.id || 1, max), 0) + 1,\r\n            text: action.payload.text,\r\n            column_id: action.payload.column_id,\r\n          },\r\n        ];\r\n      }\r\n      return state;\r\n    },\r\n    [ItemActions.Type.DELETE_ITEM]: (state, action) => {\r\n      return state.filter((item) => item.id !== (action.payload as any));\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport { RootState } from './state';\r\nimport { ItemActions } from 'app/actions/items';\r\n\r\nconst initialState: RootState.NewItemState = {\r\n  id: 0,\r\n  text: '',\r\n  column_id: 0\r\n};\r\n\r\nexport const newItemReducer = handleActions<RootState.NewItemState, any>(\r\n  {\r\n    [ItemActions.Type.EDIT_ITEM_COLUMN]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        column_id: parseInt(action.payload) \r\n      }\r\n    },\r\n    [ItemActions.Type.EDIT_ITEM_TEXT]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        text: action.payload\r\n      }\r\n    },\r\n    [ItemActions.Type.CLEAR_NEW_ITEM]: (state, action) => {\r\n      return initialState;\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport { RootState } from './state';\r\nimport { FilterActions } from 'app/actions/filter';\r\n\r\nconst initialState: string = \"\";\r\n\r\nexport const filterReducer = handleActions<RootState.FilterState, string>(\r\n  {\r\n    [FilterActions.Type.SET_FILTER]: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport { RootState } from './state';\r\nimport { itemsReducer } from './items';\r\nimport { newItemReducer } from './newItem';\r\nimport { filterReducer } from './filter';\r\n\r\nexport { RootState };\r\n\r\nexport const rootReducer = combineReducers({\r\n  items: itemsReducer,\r\n  newItem: newItemReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { Middleware } from 'redux';\r\n\r\nexport const logger: Middleware = (store) => (next) => (action) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    console.log(action);\r\n  }\r\n  return next(action);\r\n};\r\n","import { Store, createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { RootState, rootReducer } from 'app/reducers';\r\nimport { logger, thunk } from 'app/middleware';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\n\r\nexport function configureStore(initialState?: RootState): any {\r\n  let middleware = applyMiddleware(thunk, logger);\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    middleware = composeWithDevTools(middleware);\r\n  }\r\n\r\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n  const store = createStore(persistedReducer as any, initialState as any, middleware) as Store<RootState>;\r\n  const persistor = persistStore(store);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('app/reducers', () => {\r\n      const nextReducer = require('app/reducers');\r\n      store.replaceReducer(nextReducer);\r\n    });\r\n  }\r\n\r\n  return {store, persistor};\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createBrowserHistory } from 'history';\r\nimport { configureStore } from 'app/store';\r\nimport { Router } from 'react-router';\r\nimport { App } from './app';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\n// prepare store\r\nconst history = createBrowserHistory();\r\nconst {store, persistor} = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);","import { useMemo } from 'react';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { createAction } from 'redux-actions';\r\nimport { ItemModel } from 'app/models';\r\n\r\nexport namespace ItemActions {\r\n  export enum Type {\r\n    ADD_ITEM = 'ADD_ITEM',\r\n    EDIT_ITEM_TEXT = 'EDIT_ITEM_TEXT',\r\n    EDIT_ITEM_COLUMN = \"EDIT_ITEM_COLUMN\",\r\n    DELETE_ITEM = 'DELETE_ITEM',\r\n    CLEAR_NEW_ITEM = 'CLEAR_NEW_ITEM',\r\n  }\r\n\r\n  export const addItem = createAction<ItemModel>(Type.ADD_ITEM);\r\n  export const editItemText = createAction<string>(Type.EDIT_ITEM_TEXT);\r\n  export const editItemColmun = createAction<number>(Type.EDIT_ITEM_COLUMN);\r\n  export const deleteItem = createAction<ItemModel['id']>(Type.DELETE_ITEM);\r\n  export const clearNewItem = createAction(Type.CLEAR_NEW_ITEM);\r\n}\r\n\r\nexport type ItemActions = Omit<typeof ItemActions, 'Type'>;\r\n\r\nexport const useItemActions = (dispatch: Dispatch) => {\r\n  const { Type, ...actions } = ItemActions;\r\n  return useMemo(() => bindActionCreators(actions as any, dispatch), [dispatch]) as ItemActions;\r\n};\r\n"],"sourceRoot":""}